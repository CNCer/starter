Create virtual Env.
    py -m venv env    

initialize poetry
    poetry init

adding dependencies
    poetry add dep1 dep2

installing dependencies (not required if adding dependency was used)
    poetry install

create new django project
    django-admin startproject project-name  .

create new django app
    py manage.py startapp your_app_name

install only for development
    poetry add django-rosetta --group dev

install without development group
    poetry install --without dev


run celery
    celery -A config worker -l DEBUG  --pool=solo

run task
    py manage.py shell
    from app1.tasks import add
    add.apply(2,2)

run celery beats
    celery -A config beat -l DEBUG 
    --scheduler django_celery_beat.schedulers:DatabaseScheduler

docker upload file to volume:
    docker cp E:/starter/media/user.png django-docker:/app/media/user.png

migrations in docker
    docker exec -t -i django-docker bash
    python manage.py migrate
    python manage.py createsuperuser

concurency triger check
    python manage.py triggers list 
                                drop
                                create

get container env variables
    docker exec container-name env

start celery
    celery -A config worker -l INFO
    celery -A config worker --loglevel=info -P gevent (windows)

start celery beats
    celery -A config beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    celery -A config beat -l INFO 


